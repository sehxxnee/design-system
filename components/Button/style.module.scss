@use '../../styles/index' as ds; 
.button {
  --shadow: 0 6px 18px rgba(0, 0, 0, 0.06);
  --shadow-hover: 0 10px 24px rgba(0, 0, 0, 0.10);

  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--ds-gap);
  border: 1px solid var(--ds-border);
  background: var(--ds-bg);
  color: var(--ds-fg);
  line-height: 1;
  cursor: pointer;
  transition: transform .04s ease, box-shadow .18s ease, background .18s ease, border-color .18s ease, color .18s ease;
  box-shadow: var(--shadow);
  user-select: none;
  position: relative;
}

.button:hover:not(:disabled) { box-shadow: var(--shadow-hover); transform: translateY(-1px); }
.button:active:not(:disabled) { transform: translateY(0); box-shadow: var(--shadow); } 

.button:focus-visible {
  outline: none; 
  box-shadow: 0 0 0 3px var(--ring), var(--shadow); 
}

.button:disabled {
  opacity: .55;
  cursor: not-allowed;
  box-shadow: none;
}

// ====================================================================
// 크기 & 라운드: Mixins 모듈의 Map 사용
// ====================================================================

// 크기: SCSS Map & @each 사용
@each $key, $val in ds.$button-sizes {
  .size-#{$key} {
    padding: map-get($val, padding);
    font-size: map-get($val, font-size);
  }
}

// 라운드
.rounded-sm { border-radius: var(--ds-radius-sm); }
.rounded-md { border-radius: var(--ds-radius-md); }
.rounded-lg { border-radius: var(--ds-radius-lg); }
.rounded-pill { border-radius: 9999px; }


// ====================================================================
// 아이콘/라벨 & 기타
// ====================================================================

.icon { 
  display: inline-flex; 
  font-size: 1em; 
}
.label { display: inline-block; }

.fullWidth { width: 100%; }

// ====================================================================
// 변형(variant): Mixin 호출
// ====================================================================

.primary {
  @include ds.button-variant(
    --ds-primary, 
    --ds-primary, 
    #fff, 
    --ds-primary-700, 
    --ds-primary-700
  );
}

.secondary {
  @include ds.button-variant(
    --ds-secondary, 
    --ds-secondary, 
    #072436, 
    --ds-secondary-700, 
    --ds-secondary-700,
    #fff
  );
}

.danger {
  @include ds.button-variant(
    --ds-danger, 
    --ds-danger, 
    #fff, 
    --ds-danger-700, 
    --ds-danger-700
  );
}

.default {
  background: var(--ds-bg);
  color: var(--ds-fg);
  border-color: var(--ds-border);
}
.default:hover:not(:disabled) { background:#f8fafc; }


.ghost {
  background: transparent;
  border-color: transparent;
  color: var(--ds-primary);
  &:hover:not(:disabled) { 
    background: hsla(221, 80%, 53%, 0.08); 
    border-color: transparent;
  }
}

.outline {
  background: transparent;
  border-color: var(--ds-primary);
  color: var(--ds-primary);
  &:hover:not(:disabled) { 
    background: hsla(221, 80%, 53%, 0.08); 
  }
}

// ====================================================================
// 로딩 스피너
// ====================================================================

@keyframes spin { to { transform: rotate(360deg); } }
.spinner {
  width: 1em;
  height: 1em;
  border-radius: 9999px;
  border: 2px solid rgba(255,255,255,.6);
  border-top-color: rgba(255,255,255,1);
  animation: spin .8s linear infinite;
  mix-blend-mode: normal;
}

/* 라이트 배경용 스피너 색상 보정 */
.default .spinner,
.ghost .spinner,
.outline .spinner {
  border-color: rgba(0,0,0,.2);
  border-top-color: rgba(0,0,0,.7);
}